<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<!--

1) Types
[void, actor, actortype, boolean, camera, color, control, font, group, number, list, anything, region, scene, sound, text, dropdown]

2) The Spec

<block> - An entry for a custom block
tag = unique name for block, only ABC and - (dash) allowed
spec = like what you see in language files, use %0, %1, etc. to specify where the spaces go
code = output code, use ~ to specify the blanks. Must match the order in which fields are specified.
type = any of these [normal, action, wrapper, event]
color = any of these [blue, cyan, green, lime, purple, red, gray, charcoal]
returns = a TYPE

<fields> - A list of fields that a block contains
For children, the tag name corresponds to a TYPE. The order attribute starts at 0 and increments by 1. Do not skip values.

If you wish to use a dropdown, look at the example below for syntax.

3) Stuff that is not implemented yet

- No support for embedded blocks yet.
- No support for events.
- This format will be reused for customized palettes in the future.

-->

<palette>
	<block tag="idnet-init" spec="IDNet.initialize appId %0 appSecret %1 debug %2 preload %3" code="IDNetWrapper.initialize(~,~,~,~);" type="action" color="purple" returns="void">
		<fields>
			<text order="0"></text>
			<text order="1"></text>
			<dropdown order="2">
				<choices>
					<c text="false" code="0"></c>
					<c text="true" code="1"></c>
				</choices>
			</dropdown>
			<dropdown order="3">
				<choices>
					<c text="false" code="0"></c>
					<c text="true" code="1"></c>
				</choices>
			</dropdown>
		</fields>
	</block>
	<block tag="idnet-showpopup" spec="Show IDNet %0 popup" code="IDNetWrapper.showPopup(~);" type="action" color="purple" returns="void">
		<fields>
			<dropdown order="0">
				<choices>
					<c text="register" code="0"></c>
					<c text="login" code="1"></c>
					<c text="scoreboard" code="2"></c>
					<c text="achievements" code="3"></c>
				</choices>
			</dropdown>
		</fields>
	</block>
	<block tag="idnet-isAuthorized" spec="IDNet User is authorized" code="IDNetWrapper.isAuthorized()" type="normal" color="green" returns="boolean">
		<fields>
		</fields>
	</block>
	<block tag="idnet-logout" spec="IDNet Logout" code="IDNetWrapper.logout();" type="action" color="purple" returns="void">
		<fields>
		</fields>
	</block>
	<block tag="idnet-getName" spec="IDNet User name" code="IDNetWrapper.getName()" type="normal" color="green" returns="text">
		<fields>
		</fields>
	</block>
		<block tag="idnet-removeUserData" spec="IDNet Remove UserData slot: %0" code="IDNetWrapper.removeUserData(~);" type="wrapper" color="red" returns="void">
		<fields>
			<text order="0"></text>
		</fields>
	</block>
	<block tag="idnet-retrieveUserData" spec="IDNet Retrieve UserData slot: %0" code="IDNetWrapper.retrieveUserData(~,function(){~});" type="wrapper" color="red" returns="void">
		<fields>
			<text order="0"></text>
			<CODE_BLOCK order="1"/>
		</fields>
	</block>
	<block tag="idnet-submitUserData" spec="IDNet Submit UserData slot: %0" code="IDNetWrapper.submitUserData(~);" type="action" color="red" returns="void">
		<fields>
			<text order="0"></text>
			<text order="1"></text>
		</fields>
	</block>
	<block tag="idnet-submitScore" spec="IDNet Submit score %0" code="IDNetWrapper.submitScore(~);" type="action" color="purple" returns="void">
		<fields>
			<number order="0"></number>
		</fields>
	</block>
	<block tag="idnet-achievementsSave" spec="IDNet Save achievement name: %0 key: %1" code="IDNetWrapper.achievementsSave(~, ~);" type="action" color="purple" returns="void">
		<fields>
			<text order="0"></text>
			<text order="1"></text>
		</fields>
	</block>
	<block tag="idnet-InterfaceOpen" spec="IDNet UI is open" code="IDNetWrapper.InterfaceOpen()" type="normal" color="green" returns="boolean">
		<fields>
		</fields>
	</block>
	<block tag="idnet-loaded" spec="IDNet is initialized" code="IDNetWrapper.isInit()" type="normal" color="green" returns="boolean">
		<fields>
		</fields>
	</block>
	<block tag="idnet-domainInBlackList" spec="Domain in blacklist" code="IDNetWrapper.domainInBlackList()" type="normal" color="green" returns="boolean">
		<fields>
		</fields>
	</block>
</palette>